import { useMutation, useQuery } from '@tanstack/react-query';
import Head from 'next/head';
import type { NextPage } from 'next';

import Loader from '../components/common/Loader';
import { Prompt } from './api/prompts';
import PromptForm from '../components/common/PromptForm';
import PromptList from '../components/common/PromptList';
import TopBar from '../components/common/TopBar';
import styles from '../styles/Home.module.css';

const Home: NextPage = () => {
  const {
    data,
    isLoading: promptFetchLoading,
    refetch,
  } = useQuery(['prompts'], fetchPrompts);
  const { mutate: savePromptMutate, isLoading: promptSaveLoading } =
    useMutation(['prompt'], savePrompt);

  const loading = promptFetchLoading || promptSaveLoading;

  function fetchPrompts(): Promise<Prompt[]> {
    return fetch('/api/prompts').then((res) => res.json());
  }

  function savePrompt(promptData: {
    prompt: string;
    seed?: string;
  }): Promise<Prompt> {
    return fetch('/api/prompt', {
      method: 'POST',
      headers: {
        'Content-Type': 'application/json',
      },
      body: JSON.stringify({
        prompt: promptData.prompt,
        seed: promptData.seed || null,
      }),
    }).then((res) => {
      refetch();
      return res.json();
    });
  }

  return (
    <div>
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <TopBar />
      <main className="container">
        <h1 className={styles.title}>Prompt Store</h1>

        <p className={styles.description}>Store your favorite prompts!</p>
        <PromptForm onSubmit={handlePromptSubmit} />
        {data && data.length > 0 && (
          <section className="mt-8">
            <PromptList prompts={data} />
          </section>
        )}
      </main>

      <footer className={'mt-8 border-t-2 border-slate-600 text-center pt-2'}>
        By Laurence Juden
      </footer>
      <Loader open={loading} />
    </div>
  );

  function handlePromptSubmit(prompt: string, seed?: string) {
    savePromptMutate({ prompt, seed });
  }
};

export default Home;
